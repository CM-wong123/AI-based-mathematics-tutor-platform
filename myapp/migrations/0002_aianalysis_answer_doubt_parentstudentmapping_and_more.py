# Generated by Django 5.1.7 on 2025-03-15 23:53

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('myapp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AIAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('Arithmetic', 'Arithmetic'), ('Trigonometry', 'Trigonometry'), ('Algebra', 'Algebra'), ('Geometry', 'Geometry'), ('Calculus', 'Calculus')], max_length=50)),
                ('score_percentage', models.FloatField(default=0.0)),
                ('improvement_tips', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_answer', models.CharField(max_length=255)),
                ('is_correct', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Doubt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Answered', 'Answered')], default='Pending', max_length=10)),
                ('ai_response', models.TextField(blank=True, null=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ParentStudentMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('Arithmetic', 'Arithmetic'), ('Trigonometry', 'Trigonometry'), ('Algebra', 'Algebra'), ('Geometry', 'Geometry'), ('Calculus', 'Calculus')], max_length=50)),
                ('question_text', models.TextField()),
                ('correct_answer', models.CharField(max_length=255)),
                ('difficulty_level', models.CharField(choices=[('Easy', 'Easy'), ('Medium', 'Medium'), ('Hard', 'Hard')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quiz_title', models.CharField(max_length=255)),
                ('total_marks', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuizQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.question')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.quiz')),
            ],
            options={
                'unique_together': {('quiz', 'question')},
            },
        ),
        migrations.CreateModel(
            name='QuizSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('Arithmetic', 'Arithmetic'), ('Trigonometry', 'Trigonometry'), ('Algebra', 'Algebra'), ('Geometry', 'Geometry'), ('Calculus', 'Calculus')], max_length=50)),
                ('difficulty', models.CharField(choices=[('Easy', 'Easy'), ('Medium', 'Medium'), ('Hard', 'Hard')], max_length=10)),
                ('ai_generated', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password_hash', models.CharField(max_length=255)),
                ('role', models.CharField(choices=[('Teacher', 'Teacher'), ('Student', 'Student'), ('Parent', 'Parent')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentExam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0)),
                ('taken_at', models.DateTimeField(auto_now_add=True)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.quiz')),
            ],
        ),
        migrations.DeleteModel(
            name='Post',
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.question'),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='myapp.user')),
                ('grade_level', models.CharField(max_length=50)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='myapp.user')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('teacher', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='myapp.user')),
                ('subject', models.CharField(max_length=100)),
                ('experience', models.IntegerField()),
            ],
        ),
        migrations.AddField(
            model_name='parentstudentmapping',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_children', to='myapp.user'),
        ),
        migrations.AddField(
            model_name='answer',
            name='student_exam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.studentexam'),
        ),
        migrations.AddField(
            model_name='aianalysis',
            name='student_exam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.studentexam'),
        ),
        migrations.AddField(
            model_name='studentexam',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.student'),
        ),
        migrations.AddField(
            model_name='parentstudentmapping',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_mappings', to='myapp.student'),
        ),
        migrations.AddField(
            model_name='doubt',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.student'),
        ),
        migrations.AddField(
            model_name='quiz',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.teacher'),
        ),
        migrations.AddField(
            model_name='question',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.teacher'),
        ),
        migrations.AlterUniqueTogether(
            name='parentstudentmapping',
            unique_together={('parent', 'student')},
        ),
    ]
